"""Functionality for copying all files into their instances"""
import shutil
from pathlib import Path

from . import filesystem as fs
from . import place
from .gather import load_ender_chest_instances
from .instance import InstanceSpec
from .loggers import BREAK_LOGGER, IMPORTANT
from .prompt import confirm, prompt


def break_ender_chest(minecraft_root: Path) -> None:
    """Replace all instance symlinks with their actual targets, effectively
    "uninstalling" EnderChest

    Parameters
    ----------
    minecraft_root : Path
        The root directory that your minecraft stuff (or, at least, the one
        that's the parent of your EnderChest folder)
    """
    instances = {
        instance.name: instance
        for instance in load_ender_chest_instances(minecraft_root, log_level=IMPORTANT)
    }
    if not instances:
        BREAK_LOGGER.error("Aborting.")
        return
    BREAK_LOGGER.info(
        "Running `enderchest place` one last time to make sure that all placements"
        "\nare up-to-date. Note that any placements that are skipped or ignored"
        '\nmay not be "uninstalled" correctly.'
    )
    prompt("Press ENTER to continue.")

    placement_cache = place.place_ender_chest(
        minecraft_root,
        error_handling="ignore",
        relative=False,
        keep_stale_links=True,
        keep_broken_links=True,
    )

    BREAK_LOGGER.warning(
        "Are you sure you want to uninstall this EnderChest?"
        "\nDoing so will replace ALL the symlinks in each of the above instances"
        "\nwith copies of their EnderChest-linked targets."
        "\n\nTHIS CANNOT EASILY BE UNDONE!!"
    )
    if not confirm(default=False):
        BREAK_LOGGER.error("Aborting.")
        return

    _break(minecraft_root, instances, placement_cache)


def _break(
    minecraft_root: Path,
    instance_lookup: dict[str, InstanceSpec],
    placement_cache: dict[str, dict[Path, list[str]]],
) -> None:
    """Actually perform the uninstallation (separated out for ease of mocking / testing)

    Parameters
    ----------
    minecraft_root : Path
        The root directory that your minecraft stuff (or, at least, the one
        that's the parent of your EnderChest folder)
    instance_lookup : dict of str to InstanceSpec
        A lookup of instances metadata keyed by their instance names
    placement_cache : dict
        The record of placed links, as generated by `place.place_ender_chest`
    """

    for instance_name, placements in placement_cache.items():
        BREAK_LOGGER.info("Copying files into %s", instance_name)
        instance_root = instance_lookup[instance_name].root
        for resource_path, boxes in placements.items():
            if len(boxes) == 0:  # pragma: no cover
                # Since defaultdicts are involved, this could happen accidentally at
                # some point and should just be ignored
                continue

            target = (
                (fs.shulker_box_root(minecraft_root, boxes[-1]) / resource_path)
                .expanduser()
                .absolute()
            )

            instance_path = (instance_root / resource_path).expanduser().absolute()

            instance_path.parent.mkdir(parents=True, exist_ok=True)

            if instance_path.exists():
                if instance_path.is_symlink():
                    # remove previous symlink in this spot
                    old_target = instance_path.readlink()
                    instance_path.unlink()
                    BREAK_LOGGER.debug(
                        "Removed link: %s -> %s", instance_path, old_target
                    )
                else:
                    BREAK_LOGGER.warning(
                        "File or folder %s already exists. Skipping.", instance_path
                    )
                    continue
            else:  # pragma: no-cover
                # everything *should* exist, having just been placed, but just in case,
                # no need to panic
                pass

            try:
                if target.is_symlink():
                    instance_path.symlink_to(target.resolve())
                elif target.is_dir():
                    shutil.copytree(
                        target, instance_path, symlinks=True, dirs_exist_ok=True
                    )
                else:
                    shutil.copy2(
                        target,
                        instance_path,
                        follow_symlinks=False,
                    )
                BREAK_LOGGER.debug("Copied %s to %s", target, instance_path)
            except OSError as copy_fail:
                BREAK_LOGGER.warning(
                    "Failed to copy %s to %s:\n  %s", target, instance_path, copy_fail
                )

    BREAK_LOGGER.log(
        IMPORTANT,
        "EnderChest has been uninstalled.\nYou may now delete %s",
        fs.ender_chest_folder(minecraft_root),
    )
