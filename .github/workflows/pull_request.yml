# Checks performed on all pull requests, to any branch. Thus, required for protected branches,
# but enables a workflow for CI validation against non-protected branches as well.

name: PR checker

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - name: Install linters
      run: |
        python -m pip install --upgrade pip
        pip install .[test] pre-commit
        pre-commit install
    - name: Run code quality checks
      run: |
        pre-commit run --all
  test:
    strategy:
      matrix:
        os: [windows-latest]
        py: ['3.11']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.py }}
    - name: Configure SSH (bash)
      if: matrix.os != 'windows-latest'
      run: |
        ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ''
        cat > ~/.ssh/config <<EOF
          Host *
           IdentityFile ~/.ssh/id_ed25519
        EOF
        cat ~/.ssh/id_ed25519.pub > ~/.ssh/authorized_keys
        chmod -R 700 ~/.ssh
        ssh -o 'StrictHostKeyChecking no' $USER@$HOSTNAME "echo It works"
    - name: Configure SSH (PowerShell)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir $env:USERPROFILE\.ssh -ErrorAction SilentlyContinue
        ssh-keygen -t ed25519 -f $env:USERPROFILE\.ssh\id_ed25519 -N '""'
        $authorizedKey = Get-Content -Path $env:USERPROFILE\.ssh\id_ed25519.pub
        Add-Content -Force -Path $env:USERPROFILE\.ssh\authorized_keys -Value $authorizedKey
        ssh -o 'StrictHostKeyChecking no' $env:USERNAME@$env:COMPUTERNAME "powershell echo 'It works'"
    - name: Install Rsync
      if: matrix.os == 'macos-latest'
      run: brew install rsync
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[test,sftp]
    - name: Run unit tests
      run: |
        mkdir -p sandbox
        cd sandbox
        python -m pytest -vv --pyargs enderchest.test --doctest-modules --ignore-glob="docs/**" --log-level=DEBUG
